import mido
from time import time
from bhaptics.haptic_player import HapticPlayer

# List of octave superior placement
note_to_actuator = {
    "oct1": {
        "semibreve": {24: [9, 10, 11, 15, 18, 19], 26: [9, 10, 15, 18, 19], 28: [9, 10, 11, 14, 18, 19], 29: [9, 10, 11, 14, 15, 18, 19], 31: [9, 10, 14, 15, 18, 19], 33: [9, 11, 14, 18, 19], 35: [9, 11, 14, 15, 18, 19]},
        "minim": {24: [9, 10, 11, 15, 18], 26: [9, 10, 15, 18], 28: [9, 10, 11, 14, 18], 29: [9, 10, 11, 14, 15, 18], 31: [9, 10, 14, 15, 18], 33: [9, 11, 14, 18], 35: [9, 11, 14, 15, 18]},
        "crotchet": {24: [9, 10, 11, 15, 19], 26: [9, 10, 15, 19], 28: [9, 10, 11, 14, 19], 29: [9, 10, 11, 14, 15, 19], 31: [9, 10, 14, 15, 19], 33: [9, 11, 14, 19], 35: [9, 11, 14, 15, 19]},
        "quaver": {24: [9, 10, 11, 15], 26: [9, 10, 15], 28: [9, 10, 11, 14], 29: [9, 10, 11, 14, 15], 31: [9, 10, 14, 15], 33: [9, 11, 14], 35: [9, 11, 14, 15]}
    },
    "oct2": {
        "semibreve": {36: [9, 13, 10, 11, 15, 18, 19], 38: [9, 13, 10, 15, 18, 19], 40: [9, 13, 10, 11, 14, 18, 19], 41: [9, 13, 10, 11, 14, 15, 18, 19], 43: [9, 13, 10, 14, 15, 18, 19], 45: [9, 13, 11, 14], 47: [9, 13, 11, 14, 15]},
        "minim": {36: [9, 13, 10, 11, 15, 18], 38: [9, 13, 10, 15, 18], 40: [9, 13, 10, 11, 14, 18], 41: [9, 13, 10, 11, 14, 15, 18], 43: [9, 13, 10, 14, 15, 18], 45: [9, 13, 11, 14], 47: [9, 13, 11, 14, 15]},
        "crotchet": {36: [9, 13, 10, 11, 15, 19], 38: [9, 13, 10, 15, 19], 40: [9, 13, 10, 11, 14, 19], 41: [9, 13, 10, 11, 14, 15, 19], 43: [9, 13, 10, 14, 15, 19], 45: [9, 13, 11, 14], 47: [9, 13, 11, 14, 15]},
        "quaver": {36: [9, 13, 10, 11, 15], 38: [9, 13, 10, 15], 40: [9, 13, 10, 11, 14], 41: [9, 13, 10, 11, 14, 15], 43: [9, 13, 10, 14, 15], 45: [9, 13, 11, 14], 47: [9, 13, 11, 14, 15]}
    },
    "oct3": {
        "semibreve": {48: [9, 13, 17, 10, 11, 15, 18, 19], 50: [9, 13, 17, 10, 15, 18, 19], 52: [9, 13, 17, 10, 11, 14, 18, 19], 53: [9, 13, 17, 10, 11, 14, 15, 18, 19], 55: [9, 13, 17, 10, 14, 15, 18, 19], 57: [9, 13, 17, 11, 14, 18, 19], 59: [9, 13, 17, 11, 14, 15, 18, 19]},
        "minim": {48: [9, 13, 17, 10, 11, 15, 18], 50: [9, 13, 17, 10, 15, 18], 52: [9, 13, 17, 10, 11, 14, 18], 53: [9, 13, 17, 10, 11, 14, 15, 18], 55: [9, 13, 17, 10, 14, 15, 18], 57: [9, 13, 17, 11, 14, 18], 59: [9, 13, 17, 11, 14, 15, 18]},
        "crotchet": {48: [9, 13, 17, 10, 11, 15, 19], 50: [9, 13, 17, 10, 15, 19], 52: [9, 13, 17, 10, 11, 14, 19], 53: [9, 13, 17, 10, 11, 14, 15, 19], 55: [9, 13, 17, 10, 14, 15, 19], 57: [9, 13, 17, 11, 14, 19], 59: [9, 13, 17, 11, 14, 15, 19]},
        "quaver": {48: [9, 13, 17, 10, 11, 15], 50: [9, 13, 17, 10, 15], 52: [9, 13, 17, 10, 11, 14], 53: [9, 13, 17, 10, 11, 14, 15], 55: [9, 13, 17, 10, 14, 15], 57: [9, 13, 17, 11, 14], 59: [9, 13, 17, 11, 14, 15]}
    },
    "oct4": {
        "semibreve": {60: [13, 10, 11, 15, 18, 19], 62: [13, 10, 15, 18, 19], 64: [13, 10, 11, 14, 18, 19], 65: [13, 10, 11, 14, 15, 18, 19], 67: [13, 10, 14, 15, 18, 19], 69: [13, 11, 14, 18, 19], 71: [13, 3, 11, 14, 15, 18, 19]},
        "minim": {60: [13, 10, 11, 15, 18], 62: [13, 10, 15, 18], 64: [13, 10, 11, 14, 18], 65: [13, 10, 11, 14, 15, 18], 67: [13, 10, 14, 15, 18], 69: [13, 11, 14, 18], 71: [13, 3, 11, 14, 15, 18]},
        "crotchet": {60: [13, 10, 11, 15, 19], 62: [13, 10, 15, 19], 64: [13, 10, 11, 14, 19], 65: [13, 10, 11, 14, 15, 19], 67: [13, 10, 14, 15, 19], 69: [13, 11, 14, 19], 71: [13, 3, 11, 14, 15, 19]},
        "quaver": {60: [13, 10, 11, 15], 62: [13, 10, 15], 64: [13, 10, 11, 14], 65: [13, 10, 11, 14, 15], 67: [13, 10, 14, 15], 69: [13, 11, 14], 71: [13, 3, 11, 14, 15]}
    },
    "oct5": {
        "semibreve": {72: [9, 17, 10, 11, 15, 18, 19], 74: [9, 17, 10, 15, 18, 19], 76: [9, 17, 10, 11, 14, 18, 19], 77: [9, 17, 10, 11, 14, 15, 18, 19], 79: [9, 17, 10, 14, 15, 18, 19], 81: [9, 17, 11, 14, 18, 19], 83: [9, 17, 11, 14, 15, 18, 19]},
        "minim": {72: [9, 17, 10, 11, 15, 18], 74: [9, 17, 10, 15, 18], 76: [9, 17, 10, 11, 14, 18], 77: [9, 17, 10, 11, 14, 15, 18], 79: [9, 17, 10, 14, 15, 18], 81: [9, 17, 11, 14, 18], 83: [9, 17, 11, 14, 15, 18]},
        "crotchet": {72: [9, 17, 10, 11, 15, 19], 74: [9, 17, 10, 15, 19], 76: [9, 17, 10, 11, 14, 19], 77: [9, 17, 10, 11, 14, 15, 19], 79: [9, 17, 10, 14, 15, 19], 81: [9, 17, 11, 14, 19], 83: [9, 17, 11, 14, 15, 19]},
        "quaver": {72: [9, 17, 10, 11, 15], 74: [9, 17, 10, 15], 76: [9, 17, 10, 11, 14], 77: [9, 17, 10, 11, 14, 15], 79: [9, 17, 10, 14, 15], 81: [9, 17, 11, 14], 83: [9, 17, 11, 14, 15]}
    }
}

player = HapticPlayer()

def send_haptic_feedback(note, duration):
    try:
        # Placeholder for the function that sends haptic feedback
        print(f"Sending haptic feedback for note {note} with duration {duration}")
        # Add actual implementation here
    except Exception as e:
        print(f"Failed to send haptic feedback: {e}")

def handle_midi_message(msg):
    print(f"Handling MIDI message: {msg}")  # Confirm message is received
    # Determine the duration based on MIDI note velocity
    if msg.velocity > 100:
        duration = "long"
    elif msg.velocity > 75:
        duration = "medium"
    elif msg.velocity > 50:
        duration = "short"
    else:
        duration = "very short"
    send_haptic_feedback(msg.note, duration)

def main():
    port_name = mido.get_input_names()[0]
    port = mido.open_input(port_name)
    print(f"Listening on MIDI port: {port_name}")

    try:
        for msg in port:
            if msg.type == 'note_on':
                handle_midi_message(msg)
    except KeyboardInterrupt:
        print("Exiting program...")
    except Exception as e:
        print(f"An error occurred: {e}")
    finally:
        port.close()
        print("MIDI port closed.")

if __name__ == "__main__":
    main()